name: Build filebeat-oracle
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.x']
    services:
      loki:
        image: grafana/loki
        ports:
        - 3100
    #    options: --health-cmd="curl http://localhost:3100/ready" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - run: curl -iv http://localhost:${{ job.services.loki.ports['3100'] }}/ready
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      # - name: Test filebeat-oracle
      #   run: python filebeat_oracle_test.py
      - run: python setup.py install
      - name: Post Test Log To loki
        run: python -m loki_oracle
        env:
          db_group: test
          db_role: p
          db_uname: orcl
          db_inst: 1
          db_version: 10
          db_alert_file_path: ./test/10.log
          db_alert_file_encode: utf-8
          loki_host: 127.0.0.1
          loki_port: ${{ job.services.loki.ports['3100'] }}
      # - name: Test loki Index Document Number
      #   run: |
      #     esport=${{ job.services.loki.ports['9200'] }}
      #     for i in `seq 1 60`
      #     do
      #       cnt=$(curl -s -XPOST -H"Content-Type: application/json" http://127.0.0.1:${esport}/_sql?format=txt -d '{"query": "select count(*) from \"filebeat-oracle-*\" WHERE \"oracle.version\" = 10 "}' | tail -n 1)
      #       cnt=$(echo -e "${cnt}" | tr -d '[:space:]')
      #       [[ "${cnt}" == "10" ]] && echo "document count: ${cnt}. Test Document Number Success." && exit 0
      #       echo "document count: ${cnt}. retry: ${i}."
      #       sleep 1
      #     done
      #     exit 1
      - run: pip install wheel
      - run: python setup.py bdist_wheel
      - name: Publish package
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}
